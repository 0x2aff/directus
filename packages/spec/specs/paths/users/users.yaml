get:
  description: List the users.
  operationId: getUsers
  parameters:
    - $ref: "#/components/parameters/Fields"
    - $ref: "#/components/parameters/Limit"
    - $ref: "#/components/parameters/Offset"
    - $ref: "#/components/parameters/Single"
    - $ref: "#/components/parameters/Meta"
    - $ref: "#/components/parameters/Sort"
    - $ref: "#/components/parameters/Filter"
    - $ref: "#/components/parameters/q"
  responses:
    "200":
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    "401":
      $ref: "#/components/responses/UnauthorizedError"
    "404":
      $ref: "#/components/responses/NotFoundError"
  tags:
    - Users
post:
  description: Create a new user.
  operationId: createUser
  parameters:
    - $ref: "#/components/parameters/Meta"
  requestBody:
    content:
      application/json:
        schema:
          $ref: "#/components/schemas/User"
  responses:
    "200":
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/User"
    "401":
      $ref: "#/components/responses/UnauthorizedError"
    "404":
      $ref: "#/components/responses/NotFoundError"
  tags:
    - Users
