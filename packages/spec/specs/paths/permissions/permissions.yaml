get:
  description: List all permissions.
  operationId: getPermissions
  parameters:
    - $ref: "#/components/parameters/Fields"
    - $ref: "#/components/parameters/Limit"
    - $ref: "#/components/parameters/Offset"
    - $ref: "#/components/parameters/Single"
    - $ref: "#/components/parameters/Meta"
    - $ref: "#/components/parameters/Sort"
    - $ref: "#/components/parameters/Filter"
    - $ref: "#/components/parameters/search"
    - $ref: "#/components/parameters/Page"
  responses:
    "200":
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Permissions"
    "401":
      $ref: "#/components/responses/UnauthorizedError"
    "404":
      $ref: "#/components/responses/NotFoundError"
  tags:
    - Permissions
post:
  description: Create a new permission.
  operationId: createPermission
  parameters:
    - $ref: "#/components/parameters/Meta"
  requestBody:
    content:
      application/json:
        schema:
          properties:
            collection:
              description: What collection this permission applies to.
              type: string
              example: customers
            comment:
              description: If the user can post comments.
              type: string
              enum: [none, create, update, full]
            create:
              description: If the user can create items.
              type: string
              enum: [none, full]
            delete:
              description: If the user can update items.
              type: string
              enum: [none, mine, role, full]
            explain:
              description: If the user is required to leave a comment explaining what was changed.
              type: string
              enum: [none, create, update, always]
            read:
              description: If the user can read items.
              type: string
              enum: [none, mine, role, full]
            role:
              description: Unique identifier of the role this permission applies to.
              type: integer
              example: 3
            read_field_blacklist:
              description: Explicitly denies read access for specific fields.
              type: array
              items:
                type: string
              example: ["featured_image"]
            status:
              description: What status this permission applies to.
              type: string
            status_blacklist:
              description: Explicitly denies specific statuses to be used.
              type: array
              items:
                type: string
            update:
              description: If the user can update items.
              type: string
              enum: [none, mine, role, full]
            write_field_blacklist:
              description: Explicitly denies write access for specific fields.
              type: array
              items:
                type: string
          type: object
  responses:
    "200":
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/Permissions"
    "401":
      $ref: "#/components/responses/UnauthorizedError"
    "404":
      $ref: "#/components/responses/NotFoundError"
  tags:
    - Permissions
